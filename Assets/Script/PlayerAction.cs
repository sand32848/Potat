//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Script/Input/PlayerAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerAction : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerAction"",
    ""maps"": [
        {
            ""name"": ""PlayerControl"",
            ""id"": ""6975590b-a188-4641-97fd-79b9886aebe1"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""fcfb0a1d-af0f-4ee1-a34e-378652371e2b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""b595f56f-04b6-40bc-9d2e-ed9c1535884c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Zoom"",
                    ""type"": ""Button"",
                    ""id"": ""c70a73bf-7f34-491c-be8e-08a4ebe0d926"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""b10b8182-5d55-435b-baea-23c039e835c5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""8d03b0d5-08b9-4b29-8916-c834170530d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LeftShift"",
                    ""type"": ""Button"",
                    ""id"": ""7b0fbb64-2344-4814-bac6-1ae4f51b3ce4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MouseInput"",
                    ""type"": ""Value"",
                    ""id"": ""9b6f4cfd-fd95-47b9-ab41-86c182d45cdd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""f7d1b940-898f-4e1d-8f49-0cf735909d17"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Debug"",
                    ""type"": ""Button"",
                    ""id"": ""7847c836-7fa7-476c-be2d-553888620609"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""58e28649-079e-48f5-90e7-1ec12f9fe1ba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Heal"",
                    ""type"": ""Button"",
                    ""id"": ""cbe16ccc-2399-48dc-8990-496370a1ef5a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Weapon1"",
                    ""type"": ""Button"",
                    ""id"": ""92168439-8350-424e-94a0-87e0fe7de3a5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Weapon2"",
                    ""type"": ""Button"",
                    ""id"": ""0818bf49-8041-47b2-a85c-301256042f36"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Melee"",
                    ""type"": ""Button"",
                    ""id"": ""1352508d-5a4b-4e63-ad22-1f435bc9c54f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""E_up"",
                    ""type"": ""Button"",
                    ""id"": ""2d8cb1ab-5ad7-41a8-a157-1927da96cf1e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""E_down"",
                    ""type"": ""Button"",
                    ""id"": ""0232919a-91a0-4188-bef2-d8346a60dab4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""E_upDown"",
                    ""type"": ""Button"",
                    ""id"": ""7e1d7076-ad84-4530-a088-ca36f9a36619"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=2)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""G"",
                    ""type"": ""Button"",
                    ""id"": ""4c9e2fea-5e24-448f-bb66-020893487d97"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePos"",
                    ""type"": ""Value"",
                    ""id"": ""96cd51d0-a101-4218-aa78-4943923241b2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Invincible"",
                    ""type"": ""Button"",
                    ""id"": ""056676f9-7189-40e4-8ef2-87c17e5d17a1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""0a4c126b-ccc0-4beb-9bea-d51bd3f94c32"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""4c19f6cb-ae79-46ba-a7e8-84ae593b89c0"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""45d7d8bb-4d6a-401f-865f-3519d0b9fe36"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""6fed5a90-ec18-45e7-bd73-a4745683d8fd"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2475501a-bb22-47f4-b64e-1159af82c10c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""42cd1a5b-45c6-4016-a993-4fa5cec8ebdc"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5d88b94f-5e59-4274-9786-f4f0500a0dae"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2d566ef7-2dea-4fb2-9911-b85460856da0"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e761bb18-db17-4106-90c9-6594efd53761"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LeftShift"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec1da546-3c16-4f04-a252-599df161fb74"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e79c1d37-ca81-4d92-b5b0-4c833822a997"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Zoom"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14e6abd1-d9f6-41cc-88f1-cd7525566481"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""43a64154-ef87-4dc1-82af-45930aaf3a60"",
                    ""path"": ""<Keyboard>/rightBracket"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Debug"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b0ba3baf-2be4-405d-b755-4736e03ef4cd"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c6f9dc7-372a-4173-8420-e90369e7c13d"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Heal"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0b1391e4-2b23-47e8-be4f-182545b185c2"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Weapon1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""aa6acf17-30f4-4add-a23b-32c50eb39f63"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Weapon2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""14845769-4d07-4e3c-a353-62c160a12f89"",
                    ""path"": ""<Keyboard>/v"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Melee"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c3d9da23-d85d-42e6-b51e-e1468ac3894f"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""E_up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66c74983-35b8-46e3-8f36-127969748d92"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""E_down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84a196ab-2649-4eeb-b19d-95dd498296f1"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": ""Press(behavior=2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""E_upDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""396bd329-fbcf-49ae-b2b7-7d009e20a88b"",
                    ""path"": ""<Keyboard>/g"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""G"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d5986f7b-9522-41ce-8237-afeea5f558b3"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePos"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""42a3f168-00a4-4286-ae8d-8758b7e4fc3f"",
                    ""path"": ""<Keyboard>/backslash"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Invincible"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""f4086e52-c61b-46ab-bb0a-c5963f2d2287"",
            ""actions"": [
                {
                    ""name"": ""ESC"",
                    ""type"": ""Button"",
                    ""id"": ""9642f912-4485-4d70-b630-55421efd66d7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e9c6eb5c-e04d-4a5f-a33d-cbc1efd633da"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ESC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerControl
        m_PlayerControl = asset.FindActionMap("PlayerControl", throwIfNotFound: true);
        m_PlayerControl_Movement = m_PlayerControl.FindAction("Movement", throwIfNotFound: true);
        m_PlayerControl_Shoot = m_PlayerControl.FindAction("Shoot", throwIfNotFound: true);
        m_PlayerControl_Zoom = m_PlayerControl.FindAction("Zoom", throwIfNotFound: true);
        m_PlayerControl_Interact = m_PlayerControl.FindAction("Interact", throwIfNotFound: true);
        m_PlayerControl_Reload = m_PlayerControl.FindAction("Reload", throwIfNotFound: true);
        m_PlayerControl_LeftShift = m_PlayerControl.FindAction("LeftShift", throwIfNotFound: true);
        m_PlayerControl_MouseInput = m_PlayerControl.FindAction("MouseInput", throwIfNotFound: true);
        m_PlayerControl_Jump = m_PlayerControl.FindAction("Jump", throwIfNotFound: true);
        m_PlayerControl_Debug = m_PlayerControl.FindAction("Debug", throwIfNotFound: true);
        m_PlayerControl_Dash = m_PlayerControl.FindAction("Dash", throwIfNotFound: true);
        m_PlayerControl_Heal = m_PlayerControl.FindAction("Heal", throwIfNotFound: true);
        m_PlayerControl_Weapon1 = m_PlayerControl.FindAction("Weapon1", throwIfNotFound: true);
        m_PlayerControl_Weapon2 = m_PlayerControl.FindAction("Weapon2", throwIfNotFound: true);
        m_PlayerControl_Melee = m_PlayerControl.FindAction("Melee", throwIfNotFound: true);
        m_PlayerControl_E_up = m_PlayerControl.FindAction("E_up", throwIfNotFound: true);
        m_PlayerControl_E_down = m_PlayerControl.FindAction("E_down", throwIfNotFound: true);
        m_PlayerControl_E_upDown = m_PlayerControl.FindAction("E_upDown", throwIfNotFound: true);
        m_PlayerControl_G = m_PlayerControl.FindAction("G", throwIfNotFound: true);
        m_PlayerControl_MousePos = m_PlayerControl.FindAction("MousePos", throwIfNotFound: true);
        m_PlayerControl_Invincible = m_PlayerControl.FindAction("Invincible", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_ESC = m_UI.FindAction("ESC", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerControl
    private readonly InputActionMap m_PlayerControl;
    private IPlayerControlActions m_PlayerControlActionsCallbackInterface;
    private readonly InputAction m_PlayerControl_Movement;
    private readonly InputAction m_PlayerControl_Shoot;
    private readonly InputAction m_PlayerControl_Zoom;
    private readonly InputAction m_PlayerControl_Interact;
    private readonly InputAction m_PlayerControl_Reload;
    private readonly InputAction m_PlayerControl_LeftShift;
    private readonly InputAction m_PlayerControl_MouseInput;
    private readonly InputAction m_PlayerControl_Jump;
    private readonly InputAction m_PlayerControl_Debug;
    private readonly InputAction m_PlayerControl_Dash;
    private readonly InputAction m_PlayerControl_Heal;
    private readonly InputAction m_PlayerControl_Weapon1;
    private readonly InputAction m_PlayerControl_Weapon2;
    private readonly InputAction m_PlayerControl_Melee;
    private readonly InputAction m_PlayerControl_E_up;
    private readonly InputAction m_PlayerControl_E_down;
    private readonly InputAction m_PlayerControl_E_upDown;
    private readonly InputAction m_PlayerControl_G;
    private readonly InputAction m_PlayerControl_MousePos;
    private readonly InputAction m_PlayerControl_Invincible;
    public struct PlayerControlActions
    {
        private @PlayerAction m_Wrapper;
        public PlayerControlActions(@PlayerAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerControl_Movement;
        public InputAction @Shoot => m_Wrapper.m_PlayerControl_Shoot;
        public InputAction @Zoom => m_Wrapper.m_PlayerControl_Zoom;
        public InputAction @Interact => m_Wrapper.m_PlayerControl_Interact;
        public InputAction @Reload => m_Wrapper.m_PlayerControl_Reload;
        public InputAction @LeftShift => m_Wrapper.m_PlayerControl_LeftShift;
        public InputAction @MouseInput => m_Wrapper.m_PlayerControl_MouseInput;
        public InputAction @Jump => m_Wrapper.m_PlayerControl_Jump;
        public InputAction @Debug => m_Wrapper.m_PlayerControl_Debug;
        public InputAction @Dash => m_Wrapper.m_PlayerControl_Dash;
        public InputAction @Heal => m_Wrapper.m_PlayerControl_Heal;
        public InputAction @Weapon1 => m_Wrapper.m_PlayerControl_Weapon1;
        public InputAction @Weapon2 => m_Wrapper.m_PlayerControl_Weapon2;
        public InputAction @Melee => m_Wrapper.m_PlayerControl_Melee;
        public InputAction @E_up => m_Wrapper.m_PlayerControl_E_up;
        public InputAction @E_down => m_Wrapper.m_PlayerControl_E_down;
        public InputAction @E_upDown => m_Wrapper.m_PlayerControl_E_upDown;
        public InputAction @G => m_Wrapper.m_PlayerControl_G;
        public InputAction @MousePos => m_Wrapper.m_PlayerControl_MousePos;
        public InputAction @Invincible => m_Wrapper.m_PlayerControl_Invincible;
        public InputActionMap Get() { return m_Wrapper.m_PlayerControl; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerControlActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerControlActions instance)
        {
            if (m_Wrapper.m_PlayerControlActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMovement;
                @Shoot.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnShoot;
                @Zoom.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnZoom;
                @Zoom.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnZoom;
                @Zoom.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnZoom;
                @Interact.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnInteract;
                @Reload.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnReload;
                @LeftShift.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnLeftShift;
                @LeftShift.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnLeftShift;
                @LeftShift.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnLeftShift;
                @MouseInput.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMouseInput;
                @MouseInput.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMouseInput;
                @MouseInput.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMouseInput;
                @Jump.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnJump;
                @Debug.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnDebug;
                @Debug.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnDebug;
                @Debug.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnDebug;
                @Dash.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnDash;
                @Heal.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnHeal;
                @Heal.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnHeal;
                @Heal.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnHeal;
                @Weapon1.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnWeapon1;
                @Weapon1.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnWeapon1;
                @Weapon1.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnWeapon1;
                @Weapon2.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnWeapon2;
                @Weapon2.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnWeapon2;
                @Weapon2.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnWeapon2;
                @Melee.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMelee;
                @Melee.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMelee;
                @Melee.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMelee;
                @E_up.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnE_up;
                @E_up.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnE_up;
                @E_up.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnE_up;
                @E_down.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnE_down;
                @E_down.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnE_down;
                @E_down.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnE_down;
                @E_upDown.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnE_upDown;
                @E_upDown.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnE_upDown;
                @E_upDown.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnE_upDown;
                @G.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnG;
                @G.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnG;
                @G.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnG;
                @MousePos.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMousePos;
                @MousePos.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMousePos;
                @MousePos.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMousePos;
                @Invincible.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnInvincible;
                @Invincible.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnInvincible;
                @Invincible.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnInvincible;
            }
            m_Wrapper.m_PlayerControlActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Zoom.started += instance.OnZoom;
                @Zoom.performed += instance.OnZoom;
                @Zoom.canceled += instance.OnZoom;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @LeftShift.started += instance.OnLeftShift;
                @LeftShift.performed += instance.OnLeftShift;
                @LeftShift.canceled += instance.OnLeftShift;
                @MouseInput.started += instance.OnMouseInput;
                @MouseInput.performed += instance.OnMouseInput;
                @MouseInput.canceled += instance.OnMouseInput;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Debug.started += instance.OnDebug;
                @Debug.performed += instance.OnDebug;
                @Debug.canceled += instance.OnDebug;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @Heal.started += instance.OnHeal;
                @Heal.performed += instance.OnHeal;
                @Heal.canceled += instance.OnHeal;
                @Weapon1.started += instance.OnWeapon1;
                @Weapon1.performed += instance.OnWeapon1;
                @Weapon1.canceled += instance.OnWeapon1;
                @Weapon2.started += instance.OnWeapon2;
                @Weapon2.performed += instance.OnWeapon2;
                @Weapon2.canceled += instance.OnWeapon2;
                @Melee.started += instance.OnMelee;
                @Melee.performed += instance.OnMelee;
                @Melee.canceled += instance.OnMelee;
                @E_up.started += instance.OnE_up;
                @E_up.performed += instance.OnE_up;
                @E_up.canceled += instance.OnE_up;
                @E_down.started += instance.OnE_down;
                @E_down.performed += instance.OnE_down;
                @E_down.canceled += instance.OnE_down;
                @E_upDown.started += instance.OnE_upDown;
                @E_upDown.performed += instance.OnE_upDown;
                @E_upDown.canceled += instance.OnE_upDown;
                @G.started += instance.OnG;
                @G.performed += instance.OnG;
                @G.canceled += instance.OnG;
                @MousePos.started += instance.OnMousePos;
                @MousePos.performed += instance.OnMousePos;
                @MousePos.canceled += instance.OnMousePos;
                @Invincible.started += instance.OnInvincible;
                @Invincible.performed += instance.OnInvincible;
                @Invincible.canceled += instance.OnInvincible;
            }
        }
    }
    public PlayerControlActions @PlayerControl => new PlayerControlActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private IUIActions m_UIActionsCallbackInterface;
    private readonly InputAction m_UI_ESC;
    public struct UIActions
    {
        private @PlayerAction m_Wrapper;
        public UIActions(@PlayerAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @ESC => m_Wrapper.m_UI_ESC;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void SetCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterface != null)
            {
                @ESC.started -= m_Wrapper.m_UIActionsCallbackInterface.OnESC;
                @ESC.performed -= m_Wrapper.m_UIActionsCallbackInterface.OnESC;
                @ESC.canceled -= m_Wrapper.m_UIActionsCallbackInterface.OnESC;
            }
            m_Wrapper.m_UIActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ESC.started += instance.OnESC;
                @ESC.performed += instance.OnESC;
                @ESC.canceled += instance.OnESC;
            }
        }
    }
    public UIActions @UI => new UIActions(this);
    public interface IPlayerControlActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnShoot(InputAction.CallbackContext context);
        void OnZoom(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnLeftShift(InputAction.CallbackContext context);
        void OnMouseInput(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnDebug(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnHeal(InputAction.CallbackContext context);
        void OnWeapon1(InputAction.CallbackContext context);
        void OnWeapon2(InputAction.CallbackContext context);
        void OnMelee(InputAction.CallbackContext context);
        void OnE_up(InputAction.CallbackContext context);
        void OnE_down(InputAction.CallbackContext context);
        void OnE_upDown(InputAction.CallbackContext context);
        void OnG(InputAction.CallbackContext context);
        void OnMousePos(InputAction.CallbackContext context);
        void OnInvincible(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnESC(InputAction.CallbackContext context);
    }
}
