//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Script/PlayerAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerAction : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerAction"",
    ""maps"": [
        {
            ""name"": ""PlayerControl"",
            ""id"": ""3dd3dec7-d330-4df6-8464-265d8afe3b99"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""c812df6c-4acc-4573-b771-464decb10b2d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MouseInput"",
                    ""type"": ""Value"",
                    ""id"": ""939e5770-141e-4662-82b0-2fc5b2a1c7de"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Checkpoint1"",
                    ""type"": ""Button"",
                    ""id"": ""3d581dc9-f352-4782-9158-4594080dfd91"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Checkpoint2"",
                    ""type"": ""Button"",
                    ""id"": ""87766668-6498-4307-a016-df61e832b490"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Checkpoint3"",
                    ""type"": ""Button"",
                    ""id"": ""06823dff-81cd-4428-85c8-b8558d4b93bb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Checkpoint4"",
                    ""type"": ""Button"",
                    ""id"": ""93ce9048-3ce9-4602-9969-8c000c76ed61"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""85124570-353e-47e3-ab85-3d08d857f461"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ESC"",
                    ""type"": ""Button"",
                    ""id"": ""52aef8f7-81dd-40f0-8a8b-99556df37d6d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""608ca783-1edc-4cbb-8684-0ca0f8625d07"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""2799555d-8351-4245-8b5d-525f1e1c2fa1"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7419603e-917a-434d-ad08-f0043f3d44be"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e7296241-1acb-4cc7-8b57-a08285829166"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c2cf7f54-a895-429a-9c7a-924a549215a6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""9faa3504-8df9-4300-81a0-8c3ef380c170"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MouseInput"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""91198e68-8e78-4f02-8ed2-5db9aa6766c1"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Checkpoint1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2a26b14-5562-4df6-8376-7264da792e33"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Checkpoint2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b7b8d10c-d0d6-4d6b-8b45-afc8dd5811b6"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Checkpoint3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ecb66d37-a98f-4ca8-a527-422c2c17aa88"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Checkpoint4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ffea4e2a-12be-46b8-97c1-8c47851a8d45"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e9c9cfa-7e4c-47b5-8183-8e865a794d1f"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ESC"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PlayerControl
        m_PlayerControl = asset.FindActionMap("PlayerControl", throwIfNotFound: true);
        m_PlayerControl_Movement = m_PlayerControl.FindAction("Movement", throwIfNotFound: true);
        m_PlayerControl_MouseInput = m_PlayerControl.FindAction("MouseInput", throwIfNotFound: true);
        m_PlayerControl_Checkpoint1 = m_PlayerControl.FindAction("Checkpoint1", throwIfNotFound: true);
        m_PlayerControl_Checkpoint2 = m_PlayerControl.FindAction("Checkpoint2", throwIfNotFound: true);
        m_PlayerControl_Checkpoint3 = m_PlayerControl.FindAction("Checkpoint3", throwIfNotFound: true);
        m_PlayerControl_Checkpoint4 = m_PlayerControl.FindAction("Checkpoint4", throwIfNotFound: true);
        m_PlayerControl_Reload = m_PlayerControl.FindAction("Reload", throwIfNotFound: true);
        m_PlayerControl_ESC = m_PlayerControl.FindAction("ESC", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PlayerControl
    private readonly InputActionMap m_PlayerControl;
    private IPlayerControlActions m_PlayerControlActionsCallbackInterface;
    private readonly InputAction m_PlayerControl_Movement;
    private readonly InputAction m_PlayerControl_MouseInput;
    private readonly InputAction m_PlayerControl_Checkpoint1;
    private readonly InputAction m_PlayerControl_Checkpoint2;
    private readonly InputAction m_PlayerControl_Checkpoint3;
    private readonly InputAction m_PlayerControl_Checkpoint4;
    private readonly InputAction m_PlayerControl_Reload;
    private readonly InputAction m_PlayerControl_ESC;
    public struct PlayerControlActions
    {
        private @PlayerAction m_Wrapper;
        public PlayerControlActions(@PlayerAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerControl_Movement;
        public InputAction @MouseInput => m_Wrapper.m_PlayerControl_MouseInput;
        public InputAction @Checkpoint1 => m_Wrapper.m_PlayerControl_Checkpoint1;
        public InputAction @Checkpoint2 => m_Wrapper.m_PlayerControl_Checkpoint2;
        public InputAction @Checkpoint3 => m_Wrapper.m_PlayerControl_Checkpoint3;
        public InputAction @Checkpoint4 => m_Wrapper.m_PlayerControl_Checkpoint4;
        public InputAction @Reload => m_Wrapper.m_PlayerControl_Reload;
        public InputAction @ESC => m_Wrapper.m_PlayerControl_ESC;
        public InputActionMap Get() { return m_Wrapper.m_PlayerControl; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerControlActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerControlActions instance)
        {
            if (m_Wrapper.m_PlayerControlActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMovement;
                @MouseInput.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMouseInput;
                @MouseInput.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMouseInput;
                @MouseInput.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnMouseInput;
                @Checkpoint1.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCheckpoint1;
                @Checkpoint1.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCheckpoint1;
                @Checkpoint1.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCheckpoint1;
                @Checkpoint2.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCheckpoint2;
                @Checkpoint2.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCheckpoint2;
                @Checkpoint2.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCheckpoint2;
                @Checkpoint3.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCheckpoint3;
                @Checkpoint3.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCheckpoint3;
                @Checkpoint3.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCheckpoint3;
                @Checkpoint4.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCheckpoint4;
                @Checkpoint4.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCheckpoint4;
                @Checkpoint4.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnCheckpoint4;
                @Reload.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnReload;
                @ESC.started -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnESC;
                @ESC.performed -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnESC;
                @ESC.canceled -= m_Wrapper.m_PlayerControlActionsCallbackInterface.OnESC;
            }
            m_Wrapper.m_PlayerControlActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @MouseInput.started += instance.OnMouseInput;
                @MouseInput.performed += instance.OnMouseInput;
                @MouseInput.canceled += instance.OnMouseInput;
                @Checkpoint1.started += instance.OnCheckpoint1;
                @Checkpoint1.performed += instance.OnCheckpoint1;
                @Checkpoint1.canceled += instance.OnCheckpoint1;
                @Checkpoint2.started += instance.OnCheckpoint2;
                @Checkpoint2.performed += instance.OnCheckpoint2;
                @Checkpoint2.canceled += instance.OnCheckpoint2;
                @Checkpoint3.started += instance.OnCheckpoint3;
                @Checkpoint3.performed += instance.OnCheckpoint3;
                @Checkpoint3.canceled += instance.OnCheckpoint3;
                @Checkpoint4.started += instance.OnCheckpoint4;
                @Checkpoint4.performed += instance.OnCheckpoint4;
                @Checkpoint4.canceled += instance.OnCheckpoint4;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
                @ESC.started += instance.OnESC;
                @ESC.performed += instance.OnESC;
                @ESC.canceled += instance.OnESC;
            }
        }
    }
    public PlayerControlActions @PlayerControl => new PlayerControlActions(this);
    public interface IPlayerControlActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnMouseInput(InputAction.CallbackContext context);
        void OnCheckpoint1(InputAction.CallbackContext context);
        void OnCheckpoint2(InputAction.CallbackContext context);
        void OnCheckpoint3(InputAction.CallbackContext context);
        void OnCheckpoint4(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
        void OnESC(InputAction.CallbackContext context);
    }
}
